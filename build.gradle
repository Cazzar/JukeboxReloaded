buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/groups/public/'
        }
        maven {
            name 'forge'
            url 'http://files.minecraftforge.net/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.1-SNAPSHOT'
    }
}
apply plugin: "forge"  // actually applies the plugin.

group = 'net.cazzar.mods.jukeboxreloaded'  // your base page
version = "2.0.0"
archivesBaseName = 'JukeboxReloaded'

if (!hasProperty('forgeVersion'))
    ext.set('forgeVersion', '1.7.2-10.12.0.996')
if (!hasProperty("assetsDir"))
    ext.set('assetsDir', 'run/assets')
minecraft {
    version = project.forgeVersion
    assetDir = project.assetsDir
}

def actualVersion = version

//logger.lifecycle "" + version
if (System.getenv("BUILD_NUMBER") != null) {
    version = "MC${minecraft.version}-$version." + System.getenv("BUILD_NUMBER");
    actualVersion += "." + System.getenv("BUILD_NUMBER");
}
else version = "MC${minecraft.version}-$version"

processResources {
    // replace stuff in text files, not binary ones.
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.lang'
        include '**/*.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
        // replace version and MCVersion
    }

    // copy everything else, thats not text
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.lang'
        exclude '**/*.info'
    }
}

jar { classifier = 'universal' }

repositories {
    mavenCentral()
    maven { url 'http://maven.cazzar.net' }
}
dependencies {
    if (System.getenv("BUILD_NUMBER") != null)
        compile 'net.cazzar.corelib:CazzarCore-1.7:MC1.7.2-1.1.0.4'
    else
        compile project (":CazzarCoreLib")
}

compileJava {
    options.encoding = 'UTF-8'
}

